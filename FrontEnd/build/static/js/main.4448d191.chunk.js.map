{"version":3,"sources":["HeaderComponent/HeaderComponent.js","FooterComponent/FooterComponent.js","HomePage/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["headerComponent","props","searchStyle","width","Navbar","color","light","expand","NavbarBrand","href","src","height","className","alt","NavbarToggler","Collapse","navbar","Col","style","xs","type","placeholder","aria-label","Nav","NavItem","NavLink","icon","faShoppingCart","size","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","faUserCircle","DropdownMenu","right","DropdownItem","divider","footerComponent","textStyle","display","gridStyle","position","textAlign","bottom","Row","HomePage","cardStyle","padding","margin","store_items","i","items","length","push","Card","img","CardBody","CardTitle","name","CardText","newPrice","Button","Container","fluid","App","useState","object","setObject","hasErrors","setErrors","a","fetch","response","json","then","res","catch","err","useEffect","fetchData","console","log","listObject","priceOption","price","quantity","logo","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0aAiEeA,EAhDS,SAAEC,GACtB,IAAMC,EAAc,CAChBC,MAAO,QAEX,OACI,6BACI,kBAACC,EAAA,EAAD,CAAQC,MAAM,OAAOC,OAAK,EAACC,OAAO,MAC9B,kBAACC,EAAA,EAAD,CAAaC,KAAK,0BACd,yBACIC,IAAI,4IACJP,MAAM,MACNQ,OAAO,KACPC,UAAU,2BACVC,IAAI,0BAGZ,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAUC,QAAM,GACZ,kBAACC,EAAA,EAAD,CAAKC,MAAOhB,EAAaiB,GAAI,IACzB,2BAAOD,MAAOhB,EAAaU,UAAU,eAAeQ,KAAK,OAAOC,YAAY,SAASC,aAAW,YAEpG,kBAACC,EAAA,EAAD,CAAKX,UAAU,UAAUI,QAAM,GAC3B,kBAACQ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAShB,KAAK,gBACV,kBAAC,IAAD,CAAiBiB,KAAMC,IAAgBC,KAAK,KAAKvB,MAAM,YAG/D,kBAACwB,EAAA,EAAD,CAAsBC,KAAG,EAACC,UAAQ,GAC9B,kBAACC,EAAA,EAAD,CAAgBF,KAAG,EAACG,OAAK,GACrB,kBAAC,IAAD,CAAiBP,KAAMQ,IAAcN,KAAK,KAAKvB,MAAM,WAEzD,kBAAC8B,EAAA,EAAD,CAAcC,OAAK,GACf,kBAACC,EAAA,EAAD,wBAGA,kBAACA,EAAA,EAAD,CAAcC,SAAO,IACrB,kBAACD,EAAA,EAAD,uBCZjBE,EAtCS,WACpB,IAQMC,EAAY,CACdC,QAAS,UAGPC,EAAY,CACdvC,MAAO,QAGX,OACI,4BAAQe,MAjBE,CACVyB,SAAS,WACTC,UAAW,SACXvC,MAAO,QACPwC,OAAQ,IACR1C,MAAO,SAaH,kBAACC,EAAA,EAAD,CAAQC,MAAM,QACV,kBAACyC,EAAA,EAAD,CAAK5B,MAAOwB,GACR,kBAACzB,EAAA,EAAD,KACI,qCAEJ,kBAACA,EAAA,EAAD,CAAKC,MAAOsB,GACR,wDAGR,kBAACM,EAAA,EAAD,CAAK5B,MAAOwB,GACR,kBAACzB,EAAA,EAAD,CAAKC,MAAOsB,GAAZ,2G,wCCQLO,EAlCE,SAAC9C,GAWd,IAVA,IAAM+C,EAAY,CACd7C,MAAO,MACP8C,QAAS,OACTC,OAAQ,QAMRC,EAAc,GACVC,EAAI,EAAGA,EAAInD,EAAMoD,MAAMC,OAAQF,IACnCD,EAAYI,KACR,kBAACC,EAAA,EAAD,CAAMtC,MAAO8B,GACR,yBAAKtC,IAAMT,EAAMoD,MAAMD,GAAGK,IAAI,GAAK7C,UAAU,iBAC7C,kBAAC8C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAa1D,EAAMoD,MAAMD,GAAGQ,MAC5B,kBAACC,EAAA,EAAD,SAAY5D,EAAMoD,MAAMD,GAAGU,UAC3B,kBAACC,EAAA,EAAD,CAAQtD,KAAK,IAAIJ,MAAM,WAAvB,WAKjB,OACI,yBAAKO,UAAU,OACX,kBAACoD,EAAA,EAAD,CAAWC,OAAO,EAAM/C,MAnBd,CACd+B,QAAS,oBACTR,QAAS,QAkBD,kBAACK,EAAA,EAAD,KACKK,MCiDNe,MA3Ef,WAAgB,IAAD,EAEiBC,mBAAS,IAF1B,mBAEJC,EAFI,KAEIC,EAFJ,OAGoBF,oBAAS,GAH7B,mBAGJG,EAHI,KAGOC,EAHP,iDAKX,4BAAAC,EAAA,sEAC2BC,MAAM,0BADjC,cACUC,EADV,gBAEUA,EACDC,OACAC,MAAK,SAAAC,GAAG,OAAIR,EAAUQ,MACtBC,OAAM,SAAAC,GAAG,OAAIR,EAAUQ,MALhC,4CALW,sBAaXC,qBAAU,YAbC,mCAcPC,KACD,IAEHC,QAAQC,IAAIb,GAjBD,IAkDPc,EAlDO,EAmBejB,mBAAS,CAC/BkB,YAAa,MACbC,MAAO,OACPC,SAAU,IAtBH,mBA4DX,OA5DW,UAoDPnB,EAAOd,OAAS,IAChB8B,EACI,kBAAC,EAAD,CACII,KAAK,uEACLnC,MAASe,KAKnB,yBAAKxD,UAAU,MAAMM,MAdC,CACpBP,OAAQ,SAcR,kBAAC,EAAD,MACIyE,EAOJ,kBAAC,EAAD,Q,MCjEYK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxB,MAAK,SAAAyB,GACjCA,EAAaC,kB","file":"static/js/main.4448d191.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUserCircle, faShoppingCart } from '@fortawesome/free-solid-svg-icons'\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem, Col\r\n} from 'reactstrap';\r\n\r\nconst headerComponent = ( props ) => {\r\n    const searchStyle = {\r\n        width: \"100%\"\r\n    }\r\n    return(\r\n        <div>\r\n            <Navbar color=\"dark\" light expand=\"md\">\r\n                <NavbarBrand href=\"http://localhost:3000/\">\r\n                    <img\r\n                        src=\"https://www.ebuyonline.co.uk/img/ebuy-online-ltd-logo-1525558004.jpg?fbclid=IwAR0Js3L52YZdrGYjSnAMFEn9tRk2hKjXzZyfiqQkP1-oHqsG12ilRPGdVb8\"\r\n                        width=\"100\"\r\n                        height=\"40\"\r\n                        className=\"d-inline-block align-top\"\r\n                        alt=\"React Bootstrap logo\"\r\n                    />\r\n                </NavbarBrand>\r\n                <NavbarToggler/>\r\n                <Collapse navbar>\r\n                    <Col style={searchStyle} xs={10}>\r\n                        <input style={searchStyle} className=\"form-control\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                    </Col>\r\n                    <Nav className=\"ml-auto\" navbar>\r\n                        <NavItem>\r\n                            <NavLink href=\"/components/\">\r\n                                <FontAwesomeIcon icon={faShoppingCart} size='2x' color='white'/>\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <UncontrolledDropdown nav inNavbar>\r\n                            <DropdownToggle nav caret >\r\n                                <FontAwesomeIcon icon={faUserCircle} size='2x' color='white'/>\r\n                            </DropdownToggle>\r\n                            <DropdownMenu right>\r\n                                <DropdownItem>\r\n                                    Account Profile\r\n                                </DropdownItem>\r\n                                <DropdownItem divider />\r\n                                <DropdownItem>\r\n                                    Log Out\r\n                                </DropdownItem>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                    </Nav>\r\n                </Collapse>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default headerComponent;","import React from 'react'\r\nimport { Navbar, Row, Col } from 'reactstrap';\r\n\r\nconst footerComponent = () => {\r\n    const style = {\r\n        position:'absolute',\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        bottom: '0',\r\n        width: '100%'\r\n    };\r\n\r\n    const textStyle = {\r\n        display: 'center'\r\n    };\r\n\r\n    const gridStyle = {\r\n        width: '100%'\r\n    };\r\n\r\n    return (\r\n        <footer style={style}>\r\n            <Navbar color='dark'>\r\n                <Row style={gridStyle}>\r\n                    <Col>\r\n                        <p>About</p>\r\n                    </Col>\r\n                    <Col style={textStyle}>\r\n                        <p>Copyright by EbuyOnline</p>\r\n                    </Col>\r\n                </Row>\r\n                <Row style={gridStyle}>\r\n                    <Col style={textStyle}>\r\n                        Conditions of UsePrivacy NoticeInterest-Based AdsÂ© 1996-2019, Amazon.com, Inc. or its affiliates\r\n                    </Col>\r\n                </Row>\r\n            </Navbar>\r\n        </footer>\r\n    )\r\n};\r\n\r\nexport default footerComponent;","import React from 'react';\r\nimport {Row,\r\n    Button,\r\n    Container,\r\n    Card, CardText, CardTitle, CardBody} from 'reactstrap';\r\n\r\nconst HomePage = (props) => {\r\n    const cardStyle = {\r\n        width: \"33%\",\r\n        padding: \"10px\",\r\n        margin: \"auto\"\r\n    };\r\n    const bodyStyle = {\r\n        padding: \"10px 10% 10px 10%\",\r\n        display: \"top\"\r\n    };\r\n    let store_items = []\r\n    for(let i = 0; i < props.items.length; i++) {\r\n        store_items.push(\r\n            <Card style={cardStyle}>\r\n                 <img src={ props.items[i].img[0] } className='card-img-top'/>\r\n                 <CardBody>\r\n                     <CardTitle>{ props.items[i].name }</CardTitle>\r\n                     <CardText>${props.items[i].newPrice }</CardText>\r\n                     <Button href=\"#\" color=\"primary\">Link</Button>\r\n                 </CardBody>\r\n             </Card>)\r\n\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n            <Container fluid={true} style={bodyStyle}>\r\n                <Row>\r\n                    {store_items}\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport ObjectPage from './ObjectPage/ObjectPage';\r\nimport Navbar from './HeaderComponent/HeaderComponent';\r\nimport Footer from './FooterComponent/FooterComponent';\r\nimport HomePage from './HomePage/HomePage'\r\n\r\nfunction App() {\r\n\r\n    const [object, setObject] = useState({});\r\n    const [hasErrors, setErrors] = useState(false);\r\n\r\n    async function fetchData() {\r\n        const response = await fetch(\"http://localhost:5000/\");\r\n        await response\r\n            .json()\r\n            .then(res => setObject(res))\r\n            .catch(err => setErrors(err));\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    console.log(hasErrors);\r\n\r\n    const [price, setPrice] = useState({\r\n        priceOption: 'new',\r\n        price: 598.23,\r\n        quantity: 1\r\n    });\r\n\r\n    const priceOptionHandler = (event) => {\r\n        let currentPrice;\r\n        let quantity = price.quantity;\r\n        if (event.target.value === 'new') {\r\n            currentPrice = 598.23;\r\n        } else {\r\n            currentPrice = 478.13;\r\n        }\r\n        setPrice({priceOption: event.target.value, price: (currentPrice * quantity), quantity: quantity});\r\n    };\r\n\r\n    const quantityHandler = (event) => {\r\n        let initialPrice;\r\n        if (price.priceOption === 'new') {\r\n            initialPrice = 598.23;\r\n        } else {\r\n            initialPrice = 478.13;\r\n        }\r\n        const quantity = event.target.value;\r\n        setPrice({quantity: quantity, price: (initialPrice * quantity), priceOption: price.priceOption})\r\n    };\r\n\r\n    const backgroundStyle = {\r\n        height: '100%'\r\n    };\r\n    let listObject;\r\n\r\n    if (object.length > 0) {\r\n        listObject = (\r\n            <HomePage\r\n                logo=\"https://www.ebuyonline.co.uk/img/ebuy-online-ltd-logo-1525558004.jpg\"\r\n                items = {object}\r\n            />\r\n        )\r\n    }\r\n    return (\r\n      <div className=\"App\" style={backgroundStyle}>\r\n        <Navbar />\r\n          { listObject }\r\n        {/*<ObjectPage img='https://c402277.ssl.cf1.rackcdn.com/photos/14785/images/story_full_width/shutterstock_532108075.jpg?1512507049'*/}\r\n        {/*            currentPriceOption={price.priceOption}*/}\r\n        {/*            changePriceOption={priceOptionHandler}*/}\r\n        {/*            price={price.price}*/}\r\n        {/*            quantity={price.quantity}*/}\r\n        {/*            changeQuantity={quantityHandler}/>*/}\r\n        <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}